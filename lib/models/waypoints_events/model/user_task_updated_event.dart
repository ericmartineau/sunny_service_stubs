// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, non_constant_identifier_names, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';
import '../waypoints_events_ext.dart';

import '../model/account_event.dart';
import '../model/entity_event.dart';
import '../model/entity_updated_event.dart';


abstract class IUserTaskUpdatedEvent
  implements IEntityUpdatedEvent {

  static late _UserTaskUpdatedEventConstructor of;
  static late _UserTaskUpdatedEventFromJson fromJson;

  /// Property getter and setter for threadId: 
  RecordKey? get threadId;
  set threadId(RecordKey? threadId);


  /// Property getter and setter for frameId: 
  RecordKey? get frameId;
  set frameId(RecordKey? frameId);


  /// Property getter and setter for nodeId: 
  String? get nodeId;
  set nodeId(String? nodeId);


  /// Property getter and setter for graphId: 
  String? get graphId;
  set graphId(String? graphId);


  /// Property getter and setter for taskTitle: 
  String? get taskTitle;
  set taskTitle(String? taskTitle);


  /// Property getter and setter for status: 
  String? get status;
  set status(String? status);


  /// Property getter and setter for taskDescription: 
  String? get taskDescription;
  set taskDescription(String? taskDescription);


  /// Property getter and setter for contactId: 
  RecordKey? get contactId;
  set contactId(RecordKey? contactId);


  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  IUserTaskUpdatedEvent clone();

  @override
  Set<String> get mfields => UserTaskUpdatedEventFields.values;

}

class UserTaskUpdatedEventFields {
  static const accountId = "accountId";
  static const eventId = "eventId";
  static const entityType = "entityType";
  static const recordKey = "recordKey";
  static const dateUpdated = "dateUpdated";
  static const threadId = "threadId";
  static const frameId = "frameId";
  static const nodeId = "nodeId";
  static const graphId = "graphId";
  static const taskTitle = "taskTitle";
  static const status = "status";
  static const taskDescription = "taskDescription";
  static const contactId = "contactId";
  static const Set<String> values = {
    accountId, eventId, entityType, recordKey, dateUpdated, threadId, frameId, nodeId, graphId, taskTitle, status, taskDescription, contactId
  };
}

class UserTaskUpdatedEventPaths {
  static const JsonPath<String> accountId = JsonPath.internal(["accountId"], "/accountId");
  static const JsonPath<String> eventId = JsonPath.internal(["eventId"], "/eventId");
  static const JsonPath<MSchemaRef> entityType = JsonPath.internal(["entityType"], "/entityType");
  static const JsonPath<RecordKey> recordKey = JsonPath.internal(["recordKey"], "/recordKey");
  static const JsonPath<DateTime> dateUpdated = JsonPath.internal(["dateUpdated"], "/dateUpdated");
  static const JsonPath<RecordKey> threadId = JsonPath.internal(["threadId"], "/threadId");
  static const JsonPath<RecordKey> frameId = JsonPath.internal(["frameId"], "/frameId");
  static const JsonPath<String> nodeId = JsonPath.internal(["nodeId"], "/nodeId");
  static const JsonPath<String> graphId = JsonPath.internal(["graphId"], "/graphId");
  static const JsonPath<String> taskTitle = JsonPath.internal(["taskTitle"], "/taskTitle");
  static const JsonPath<String> status = JsonPath.internal(["status"], "/status");
  static const JsonPath<String> taskDescription = JsonPath.internal(["taskDescription"], "/taskDescription");
  static const JsonPath<RecordKey> contactId = JsonPath.internal(["contactId"], "/contactId");
  static final Set<JsonPath> values = {
    accountId, eventId, entityType, recordKey, dateUpdated, threadId, frameId, nodeId, graphId, taskTitle, status, taskDescription, contactId
  };
}


const UserTaskUpdatedEventRef = MSchemaRef("sunny", "waypointsEvents", "userTaskUpdatedEvent", "0.0.1", "ephemeral");

typedef _UserTaskUpdatedEventConstructor = IUserTaskUpdatedEvent Function({   required String? accountId, 
  required String? eventId, 
  required MSchemaRef? entityType, 
  required RecordKey? recordKey, 
  required DateTime? dateUpdated, 
  RecordKey? threadId, 
  RecordKey? frameId, 
  String? nodeId, 
  String? graphId, 
  String? taskTitle, 
  String? status, 
  String? taskDescription, 
  RecordKey? contactId
 });
typedef _UserTaskUpdatedEventFromJson = IUserTaskUpdatedEvent Function(dynamic any);