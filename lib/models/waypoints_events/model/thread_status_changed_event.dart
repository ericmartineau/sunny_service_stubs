// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, non_constant_identifier_names, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';
import '../waypoints_events_ext.dart';

import '../model/account_event.dart';
import '../model/entity_event.dart';
import '../model/entity_updated_event.dart';
import 'package:sunny_sdk_core/sunny_sdk_core.dart';
import 'package:sunny_service_stubs/models/waypoints/model/thread_status.dart';


abstract class IThreadStatusChangedEvent
  implements IEntityUpdatedEvent {

  static late _ThreadStatusChangedEventConstructor of;
  static late _ThreadStatusChangedEventFromJson fromJson;

  /// Property getter and setter for oldStatus: 
  IThreadStatus? get oldStatus;
  set oldStatus(IThreadStatus? oldStatus);


  /// Property getter and setter for newStatus: 
  IThreadStatus? get newStatus;
  set newStatus(IThreadStatus? newStatus);


  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  IThreadStatusChangedEvent clone();

  @override
  Set<String> get mfields => ThreadStatusChangedEventFields.values;

}

class ThreadStatusChangedEventFields {
  static const accountId = "accountId";
  static const eventId = "eventId";
  static const entityType = "entityType";
  static const recordKey = "recordKey";
  static const dateUpdated = "dateUpdated";
  static const oldStatus = "oldStatus";
  static const newStatus = "newStatus";
  static const Set<String> values = {
    accountId, eventId, entityType, recordKey, dateUpdated, oldStatus, newStatus
  };
}

class ThreadStatusChangedEventPaths {
  static const JsonPath<String> accountId = JsonPath.internal(["accountId"], "/accountId");
  static const JsonPath<String> eventId = JsonPath.internal(["eventId"], "/eventId");
  static const JsonPath<MSchemaRef> entityType = JsonPath.internal(["entityType"], "/entityType");
  static const JsonPath<RecordKey> recordKey = JsonPath.internal(["recordKey"], "/recordKey");
  static const JsonPath<DateTime> dateUpdated = JsonPath.internal(["dateUpdated"], "/dateUpdated");
  static const JsonPath<IThreadStatus> oldStatus = JsonPath.internal(["oldStatus"], "/oldStatus");
  static const JsonPath<IThreadStatus> newStatus = JsonPath.internal(["newStatus"], "/newStatus");
  static final Set<JsonPath> values = {
    accountId, eventId, entityType, recordKey, dateUpdated, oldStatus, newStatus
  };
}


const ThreadStatusChangedEventRef = MSchemaRef("sunny", "waypointsEvents", "threadStatusChangedEvent", "0.0.1", "ephemeral");

typedef _ThreadStatusChangedEventConstructor = IThreadStatusChangedEvent Function({   required String? accountId, 
  required String? eventId, 
  required MSchemaRef? entityType, 
  required RecordKey? recordKey, 
  required DateTime? dateUpdated, 
  required IThreadStatus? oldStatus, 
  required IThreadStatus? newStatus
 });
typedef _ThreadStatusChangedEventFromJson = IThreadStatusChangedEvent Function(dynamic any);