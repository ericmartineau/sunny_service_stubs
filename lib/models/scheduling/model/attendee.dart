// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, non_constant_identifier_names, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';
import '../scheduling_ext.dart';

import '../model/attend_method.dart';
import '../model/attendee_status.dart';


abstract class IAttendee
  implements MEntity, AttendeeExt {

  static late _AttendeeConstructor of;
  static late _AttendeeFromJson fromJson;

  /// Property getter and setter for attendeeId: 
  String? get attendeeId;
  set attendeeId(String? attendeeId);


  /// Property getter and setter for status: 
  IAttendeeStatus? get status;
  set status(IAttendeeStatus? status);


  /// Property getter and setter for flags: 
  Map<String, bool>? get flags;
  set flags(Map<String, bool>? flags);


  /// Property getter and setter for attendMethod: 
  IAttendMethod? get attendMethod;
  set attendMethod(IAttendMethod? attendMethod);


  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  IAttendee clone();

  @override
  Set<String> get mfields => AttendeeFields.values;

}

class AttendeeFields {
  static const attendeeId = "attendeeId";
  static const status = "status";
  static const flags = "flags";
  static const attendMethod = "attendMethod";
  static const Set<String> values = {
    attendeeId, status, flags, attendMethod
  };
}

class AttendeePaths {
  static const JsonPath<String> attendeeId = JsonPath.internal(["attendeeId"], "/attendeeId");
  static const JsonPath<IAttendeeStatus> status = JsonPath.internal(["status"], "/status");
  static const JsonPath<Map<String, bool>> flags = JsonPath.internal(["flags"], "/flags");
  static const JsonPath<IAttendMethod> attendMethod = JsonPath.internal(["attendMethod"], "/attendMethod");
  static final Set<JsonPath> values = {
    attendeeId, status, flags, attendMethod
  };
}


const AttendeeRef = MSchemaRef("sunny", "scheduling", "attendee", "0.0.1", "mverse");

typedef _AttendeeConstructor = IAttendee Function({   required String? attendeeId, 
  required IAttendeeStatus? status, 
  Map<String, bool>? flags, 
  required IAttendMethod? attendMethod
 });
typedef _AttendeeFromJson = IAttendee Function(dynamic any);