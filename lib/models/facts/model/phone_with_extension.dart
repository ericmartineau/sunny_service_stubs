// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';
import '../facts_ext.dart';



abstract class IPhoneWithExtension
  implements MModel {

  static late _PhoneWithExtensionConstructor of;
  static late _PhoneWithExtensionFromJson fromJson;

  /// Property getter and setter for type: 
  String? get type;
  set type(String? type);


  /// Property getter and setter for number: 
  String? get number;
  set number(String? number);


  /// Property getter and setter for extension: 
  String? get extension;
  set extension(String? extension);


  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  IPhoneWithExtension clone();

  @override
  Set<String> get mfields => PhoneWithExtensionFields.values;

}

class PhoneWithExtensionFields {
  static const type = "type";
  static const number = "number";
  static const extension = "extension";
  static const Set<String> values = {
    type, number, extension
  };
}

class PhoneWithExtensionPaths {
  static const JsonPath<String> type = JsonPath.internal(["type"], "/type");
  static const JsonPath<String> number = JsonPath.internal(["number"], "/number");
  static const JsonPath<String> extension = JsonPath.internal(["extension"], "/extension");
  static final Set<JsonPath> values = {
    type, number, extension
  };
}


const PhoneWithExtensionRef = MSchemaRef("mverse", "facts", "phoneWithExtension", "0.0.1", "ephemeral");

typedef _PhoneWithExtensionConstructor = IPhoneWithExtension Function({   String? type, 
  String? number, 
  String? extension
 });
typedef _PhoneWithExtensionFromJson = IPhoneWithExtension Function(dynamic any);