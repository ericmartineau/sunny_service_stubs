// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, non_constant_identifier_names, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';
import '../facts_ext.dart';

import '../model/church.dart';
import '../model/fact.dart';
import '../model/membership.dart';
import '../model/task_fact_for_m_model.dart';
import 'package:sunny_service_stubs/models/reliveit/model/relive_it_contact.dart';


abstract class ICongregant
  implements IMembership {

  static late _CongregantConstructor of;
  static late _CongregantFromJson fromJson;

  /// Property getter and setter for contactKey: 
  MKey? get contactKey;
  set contactKey(MKey? contactKey);


  /// Property getter and setter for church: 
  IChurch? get church;
  set church(IChurch? church);


  /// Property getter and setter for churchPosition: 
  String? get churchPosition;
  set churchPosition(String? churchPosition);


  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  ICongregant clone();

  @override
  Set<String> get mfields => CongregantFields.values;

}

class CongregantFields {
  static const creator = "creator";
  static const dateCreated = "dateCreated";
  static const assistedTask = "assistedTask";
  static const isActive = "isActive";
  static const contactKey = "contactKey";
  static const church = "church";
  static const churchPosition = "churchPosition";
  static const Set<String> values = {
    creator, dateCreated, assistedTask, isActive, contactKey, church, churchPosition
  };
}

class CongregantPaths {
  static const JsonPath<IReliveItContact> creator = JsonPath.internal(["creator"], "/creator");
  static const JsonPath<DateTime> dateCreated = JsonPath.internal(["dateCreated"], "/dateCreated");
  static const JsonPath<ITaskFactForMModel> assistedTask = JsonPath.internal(["assistedTask"], "/assistedTask");
  static const JsonPath<bool> isActive = JsonPath.internal(["isActive"], "/isActive");
  static const JsonPath<MKey> contactKey = JsonPath.internal(["contactKey"], "/contactKey");
  static const JsonPath<IChurch> church = JsonPath.internal(["church"], "/church");
  static const JsonPath<String> churchPosition = JsonPath.internal(["churchPosition"], "/churchPosition");
  static final Set<JsonPath> values = {
    creator, dateCreated, assistedTask, isActive, contactKey, church, churchPosition
  };
}


const CongregantRef = MSchemaRef("sunny", "fact", "congregant", "0.0.1", "mverse");

typedef _CongregantConstructor = ICongregant Function({   IReliveItContact? creator, 
  required DateTime? dateCreated, 
  ITaskFactForMModel? assistedTask, 
  bool? isActive, 
  required MKey? contactKey, 
  required IChurch? church, 
  String? churchPosition
 });
typedef _CongregantFromJson = ICongregant Function(dynamic any);