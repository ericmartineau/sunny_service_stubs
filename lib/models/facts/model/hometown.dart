// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';

import '../../contact_v2/model/physical_location.dart';
import '../../reliveit/model/relive_it_contact.dart';
import '../model/fact.dart';
import '../model/task_fact_for_m_model.dart';
import 'package:sunny_sdk_core/sunny_sdk_core.dart';


abstract class IHometown implements IFact {
  /// Property getter and setter for contactKey: 
  MKey? get contactKey;
  

  /// Property getter and setter for location1: 
  IPhysicalLocation? get location1;
  

  /// Property getter and setter for location2: 
  IPhysicalLocation? get location2;
  

  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  IHometown clone();

  @override
  Set<String> get mfields => HometownFields.values;

}

class HometownFields {
  
  static const creator = "creator";
  static const dateCreated = "dateCreated";
  static const assistedTask = "assistedTask";
  static const contactKey = "contactKey";
  static const location1 = "location1";
  static const location2 = "location2";
  static const Set<String> values = {
    creator, dateCreated, assistedTask, contactKey, location1, location2
  };
}

class HometownPaths {
  
  static const JsonPath<IReliveItContact> creator = JsonPath.internal(["creator"], "/creator");
  static const JsonPath<DateTime> dateCreated = JsonPath.internal(["dateCreated"], "/dateCreated");
  static const JsonPath<ITaskFactForMModel> assistedTask = JsonPath.internal(["assistedTask"], "/assistedTask");
  static const JsonPath<MKey> contactKey = JsonPath.internal(["contactKey"], "/contactKey");
  static const JsonPath<IPhysicalLocation> location1 = JsonPath.internal(["location1"], "/location1");
  static const JsonPath<IPhysicalLocation> location2 = JsonPath.internal(["location2"], "/location2");
  static final Set<JsonPath> values = {
    creator, dateCreated, assistedTask, contactKey, location1, location2
  };
}


const HometownRef = MSchemaRef("sunny", "fact", "hometown", "0.0.1", "mverse");