// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';

import '../../reliveit/model/relive_it_contact.dart';
import '../model/employer.dart';
import '../model/fact.dart';
import '../model/membership.dart';
import '../model/phone_with_extension.dart';
import '../model/task_fact_for_m_model.dart';
import 'package:sunny_sdk_core/sunny_sdk_core.dart';


abstract class IEmployee implements IMembership {
  /// Property getter and setter for contactKey: 
  MKey? get contactKey;
  

  /// Property getter and setter for company: 
  IEmployer? get company;
  

  /// Property getter and setter for position: 
  String? get position;
  

  /// Property getter and setter for workPhone: 
  IPhoneWithExtension? get workPhone;
  

  /// Property getter and setter for startDate: 
  FlexiDate? get startDate;
  

  /// Property getter and setter for endDate: 
  FlexiDate? get endDate;
  

  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  IEmployee clone();

  @override
  Set<String> get mfields => EmployeeFields.values;

}

class EmployeeFields {
  
  static const creator = "creator";
  static const dateCreated = "dateCreated";
  static const assistedTask = "assistedTask";
  static const isActive = "isActive";
  static const contactKey = "contactKey";
  static const company = "company";
  static const position = "position";
  static const workPhone = "workPhone";
  static const startDate = "startDate";
  static const endDate = "endDate";
  static const Set<String> values = {
    creator, dateCreated, assistedTask, isActive, contactKey, company, position, workPhone, startDate, endDate
  };
}

class EmployeePaths {
  
  static const JsonPath<IReliveItContact> creator = JsonPath.internal(["creator"], "/creator");
  static const JsonPath<DateTime> dateCreated = JsonPath.internal(["dateCreated"], "/dateCreated");
  static const JsonPath<ITaskFactForMModel> assistedTask = JsonPath.internal(["assistedTask"], "/assistedTask");
  static const JsonPath<bool> isActive = JsonPath.internal(["isActive"], "/isActive");
  static const JsonPath<MKey> contactKey = JsonPath.internal(["contactKey"], "/contactKey");
  static const JsonPath<IEmployer> company = JsonPath.internal(["company"], "/company");
  static const JsonPath<String> position = JsonPath.internal(["position"], "/position");
  static const JsonPath<IPhoneWithExtension> workPhone = JsonPath.internal(["workPhone"], "/workPhone");
  static const JsonPath<FlexiDate> startDate = JsonPath.internal(["startDate"], "/startDate");
  static const JsonPath<FlexiDate> endDate = JsonPath.internal(["endDate"], "/endDate");
  static final Set<JsonPath> values = {
    creator, dateCreated, assistedTask, isActive, contactKey, company, position, workPhone, startDate, endDate
  };
}


const EmployeeRef = MSchemaRef("sunny", "fact", "employee", "0.0.1", "mverse");