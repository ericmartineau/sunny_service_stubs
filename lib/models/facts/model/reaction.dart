// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';
import '../facts_ext.dart';

import 'package:sunny_sdk_core/sunny_sdk_core.dart';
import 'package:sunny_service_stubs/models/reliveit/model/relive_it_contact.dart';
import 'package:sunny_service_stubs/models/waypoints/model/image_content.dart';
import 'package:sunny_service_stubs/models/waypoints/model/video_content.dart';


abstract class IReaction
  implements MEntity {

  static late _ReactionConstructor of;
  static late _ReactionFromJson fromJson;

  /// Property getter and setter for comment: 
  String? get comment;
  set comment(String? comment);


  /// Property getter and setter for emote: 
  String? get emote;
  set emote(String? emote);


  /// Property getter and setter for photos: 
  List<IImageContent>? get photos;
  set photos(List<IImageContent>? photos);


  /// Property getter and setter for videos: 
  List<IVideoContent>? get videos;
  set videos(List<IVideoContent>? videos);


  /// Property getter and setter for creator: 
  IReliveItContact? get creator;
  set creator(IReliveItContact? creator);


  /// Property getter and setter for user: 
  MKey? get user;
  set user(MKey? user);


  /// Property getter and setter for chain: 
  List<MKey>? get chain;
  set chain(List<MKey>? chain);


  /// Property getter and setter for content: 
  MKey? get content;
  set content(MKey? content);


  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  IReaction clone();

  @override
  Set<String> get mfields => ReactionFields.values;

}

class ReactionFields {
  static const comment = "comment";
  static const emote = "emote";
  static const photos = "photos";
  static const videos = "videos";
  static const creator = "creator";
  static const user = "user";
  static const chain = "chain";
  static const content = "content";
  static const Set<String> values = {
    comment, emote, photos, videos, creator, user, chain, content
  };
}

class ReactionPaths {
  static const JsonPath<String> comment = JsonPath.internal(["comment"], "/comment");
  static const JsonPath<String> emote = JsonPath.internal(["emote"], "/emote");
  static const JsonPath<List<IImageContent>> photos = JsonPath.internal(["photos"], "/photos");
  static const JsonPath<List<IVideoContent>> videos = JsonPath.internal(["videos"], "/videos");
  static const JsonPath<IReliveItContact> creator = JsonPath.internal(["creator"], "/creator");
  static const JsonPath<MKey> user = JsonPath.internal(["user"], "/user");
  static const JsonPath<List<MKey>> chain = JsonPath.internal(["chain"], "/chain");
  static const JsonPath<MKey> content = JsonPath.internal(["content"], "/content");
  static final Set<JsonPath> values = {
    comment, emote, photos, videos, creator, user, chain, content
  };
}


const ReactionRef = MSchemaRef("sunny", "fact", "reaction", "0.0.1", "mverse");

typedef _ReactionConstructor = IReaction Function({   String? comment, 
  String? emote, 
  List<IImageContent>? photos, 
  List<IVideoContent>? videos, 
  required IReliveItContact? creator, 
  required MKey? user, 
  required List<MKey>? chain, 
  required MKey? content
 });
typedef _ReactionFromJson = IReaction Function(dynamic any);