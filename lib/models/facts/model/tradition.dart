// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, non_constant_identifier_names, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';
import '../facts_ext.dart';

import '../model/fact.dart';
import '../model/task_fact_for_m_model.dart';
import 'package:sunny_sdk_core/sunny_sdk_core.dart';
import 'package:sunny_service_stubs/models/contact_v2/model/physical_location.dart';
import 'package:sunny_service_stubs/models/reliveit/model/relive_it_contact.dart';


abstract class ITradition
  implements IFact {

  static late _TraditionConstructor of;
  static late _TraditionFromJson fromJson;

  /// Property getter and setter for group: 
  List<MKey>? get group;
  set group(List<MKey>? group);


  /// Property getter and setter for traditionDate: 
  FlexiDate? get traditionDate;
  set traditionDate(FlexiDate? traditionDate);


  /// Property getter and setter for traditionType: 
  String? get traditionType;
  set traditionType(String? traditionType);


  /// Property getter and setter for traditionTitle: 
  String? get traditionTitle;
  set traditionTitle(String? traditionTitle);


  /// Property getter and setter for description: 
  String? get description;
  set description(String? description);


  /// Property getter and setter for location: 
  IPhysicalLocation? get location;
  set location(IPhysicalLocation? location);


  /// Property getter and setter for emotes: 
  List<String>? get emotes;
  set emotes(List<String>? emotes);


  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  ITradition clone();

  @override
  Set<String> get mfields => TraditionFields.values;

}

class TraditionFields {
  static const creator = "creator";
  static const dateCreated = "dateCreated";
  static const assistedTask = "assistedTask";
  static const group = "group";
  static const traditionDate = "traditionDate";
  static const traditionType = "traditionType";
  static const traditionTitle = "traditionTitle";
  static const description = "description";
  static const location = "location";
  static const emotes = "emotes";
  static const Set<String> values = {
    creator, dateCreated, assistedTask, group, traditionDate, traditionType, traditionTitle, description, location, emotes
  };
}

class TraditionPaths {
  static const JsonPath<IReliveItContact> creator = JsonPath.internal(["creator"], "/creator");
  static const JsonPath<DateTime> dateCreated = JsonPath.internal(["dateCreated"], "/dateCreated");
  static const JsonPath<ITaskFactForMModel> assistedTask = JsonPath.internal(["assistedTask"], "/assistedTask");
  static const JsonPath<List<MKey>> group = JsonPath.internal(["group"], "/group");
  static const JsonPath<FlexiDate> traditionDate = JsonPath.internal(["traditionDate"], "/traditionDate");
  static const JsonPath<String> traditionType = JsonPath.internal(["traditionType"], "/traditionType");
  static const JsonPath<String> traditionTitle = JsonPath.internal(["traditionTitle"], "/traditionTitle");
  static const JsonPath<String> description = JsonPath.internal(["description"], "/description");
  static const JsonPath<IPhysicalLocation> location = JsonPath.internal(["location"], "/location");
  static const JsonPath<List<String>> emotes = JsonPath.internal(["emotes"], "/emotes");
  static final Set<JsonPath> values = {
    creator, dateCreated, assistedTask, group, traditionDate, traditionType, traditionTitle, description, location, emotes
  };
}


const TraditionRef = MSchemaRef("sunny", "fact", "tradition", "0.0.1", "mverse");

typedef _TraditionConstructor = ITradition Function({   IReliveItContact? creator, 
  required DateTime? dateCreated, 
  ITaskFactForMModel? assistedTask, 
  required List<MKey>? group, 
  FlexiDate? traditionDate, 
  String? traditionType, 
  required String? traditionTitle, 
  required String? description, 
  IPhysicalLocation? location, 
  List<String>? emotes
 });
typedef _TraditionFromJson = ITradition Function(dynamic any);