// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, non_constant_identifier_names, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';
import '../facts_ext.dart';

import '../model/fact.dart';
import '../model/task_fact_for_m_model.dart';
import 'package:sunny_service_stubs/models/reliveit/model/relive_it_contact.dart';

abstract class IMembership implements IFact {
  static late _MembershipFromJson fromJson;

  /// Property getter and setter for isActive:
  bool? get isActive;
  set isActive(bool? isActive);

  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  IMembership clone();

  @override
  Set<String> get mfields => MembershipFields.values;
}

class MembershipFields {
  static const creator = "creator";
  static const dateCreated = "dateCreated";
  static const assistedTask = "assistedTask";
  static const isActive = "isActive";
  static const Set<String> values = {
    creator,
    dateCreated,
    assistedTask,
    isActive
  };
}

class MembershipPaths {
  static const JsonPath<IReliveItContact> creator =
      JsonPath.internal(["creator"], "/creator");
  static const JsonPath<DateTime> dateCreated =
      JsonPath.internal(["dateCreated"], "/dateCreated");
  static const JsonPath<ITaskFactForMModel> assistedTask =
      JsonPath.internal(["assistedTask"], "/assistedTask");
  static const JsonPath<bool> isActive =
      JsonPath.internal(["isActive"], "/isActive");
  static final Set<JsonPath> values = {
    creator,
    dateCreated,
    assistedTask,
    isActive
  };
}

const MembershipRef =
    MSchemaRef("sunny", "fact", "membership", "0.0.1", "abstract");

// ignore: unused_element
typedef _MembershipConstructor = IMembership Function(
    {IReliveItContact? creator,
    required DateTime? dateCreated,
    ITaskFactForMModel? assistedTask,
    bool? isActive});
typedef _MembershipFromJson = IMembership Function(dynamic any);
