// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';

import '../../contact_v2/model/physical_location.dart';
import '../../reliveit/model/relive_it_contact.dart';
import '../../waypoints/model/image_content.dart';
import '../../waypoints/model/video_content.dart';
import '../model/fact.dart';
import '../model/task_fact_for_m_model.dart';
import 'package:sunny_sdk_core/sunny_sdk_core.dart';


abstract class IMilestone implements IFact {
  /// Property getter and setter for contactKeys: 
  List<MKey>? get contactKeys;
  

  /// Property getter and setter for milestoneDate: 
  FlexiDate? get milestoneDate;
  

  /// Property getter and setter for milestone: 
  String? get milestone;
  

  /// Property getter and setter for photos: 
  List<IImageContent>? get photos;
  

  /// Property getter and setter for videos: 
  List<IVideoContent>? get videos;
  

  /// Property getter and setter for location: 
  IPhysicalLocation? get location;
  

  /// Property getter and setter for details: 
  String? get details;
  

  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  IMilestone clone();

  @override
  Set<String> get mfields => MilestoneFields.values;

}

class MilestoneFields {
  
  static const creator = "creator";
  static const dateCreated = "dateCreated";
  static const assistedTask = "assistedTask";
  static const contactKeys = "contactKeys";
  static const milestoneDate = "milestoneDate";
  static const milestone = "milestone";
  static const photos = "photos";
  static const videos = "videos";
  static const location = "location";
  static const details = "details";
  static const Set<String> values = {
    creator, dateCreated, assistedTask, contactKeys, milestoneDate, milestone, photos, videos, location, details
  };
}

class MilestonePaths {
  
  static const JsonPath<IReliveItContact> creator = JsonPath.internal(["creator"], "/creator");
  static const JsonPath<DateTime> dateCreated = JsonPath.internal(["dateCreated"], "/dateCreated");
  static const JsonPath<ITaskFactForMModel> assistedTask = JsonPath.internal(["assistedTask"], "/assistedTask");
  static const JsonPath<List<MKey>> contactKeys = JsonPath.internal(["contactKeys"], "/contactKeys");
  static const JsonPath<FlexiDate> milestoneDate = JsonPath.internal(["milestoneDate"], "/milestoneDate");
  static const JsonPath<String> milestone = JsonPath.internal(["milestone"], "/milestone");
  static const JsonPath<List<IImageContent>> photos = JsonPath.internal(["photos"], "/photos");
  static const JsonPath<List<IVideoContent>> videos = JsonPath.internal(["videos"], "/videos");
  static const JsonPath<IPhysicalLocation> location = JsonPath.internal(["location"], "/location");
  static const JsonPath<String> details = JsonPath.internal(["details"], "/details");
  static final Set<JsonPath> values = {
    creator, dateCreated, assistedTask, contactKeys, milestoneDate, milestone, photos, videos, location, details
  };
}


const MilestoneRef = MSchemaRef("sunny", "fact", "milestone", "0.0.1", "mverse");