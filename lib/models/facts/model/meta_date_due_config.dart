// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, non_constant_identifier_names, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';
import '../facts_ext.dart';

import '../model/task_due_config.dart';
import 'package:sunny_dart/json.dart';
import 'package:sunny_sdk_core/sunny_sdk_core.dart';


abstract class IMetaDateDueConfig
  implements ITaskDueConfig {

  static late _MetaDateDueConfigConstructor of;
  static late _MetaDateDueConfigFromJson fromJson;

  /// Property getter and setter for schemaRef: 
  MSchemaRef? get schemaRef;
  set schemaRef(MSchemaRef? schemaRef);


  /// Property getter and setter for path: 
  JsonPath? get path;
  set path(JsonPath? path);


  /// Property getter and setter for factId: 
  String? get factId;
  set factId(String? factId);


  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  IMetaDateDueConfig clone();

  @override
  Set<String> get mfields => MetaDateDueConfigFields.values;

}

class MetaDateDueConfigFields {
  static const schemaRef = "schemaRef";
  static const path = "path";
  static const factId = "factId";
  static const Set<String> values = {
    schemaRef, path, factId
  };
}

class MetaDateDueConfigPaths {
  static const JsonPath<MSchemaRef> schemaRef = JsonPath.internal(["schemaRef"], "/schemaRef");
  static const JsonPath<JsonPath> path = JsonPath.internal(["path"], "/path");
  static const JsonPath<String> factId = JsonPath.internal(["factId"], "/factId");
  static final Set<JsonPath> values = {
    schemaRef, path, factId
  };
}


const MetaDateDueConfigRef = MSchemaRef("sunny", "fact", "metaDateDueConfig", "0.0.1", "ephemeral");

typedef _MetaDateDueConfigConstructor = IMetaDateDueConfig Function({   required MSchemaRef? schemaRef, 
  required JsonPath? path, 
  String? factId
 });
typedef _MetaDateDueConfigFromJson = IMetaDateDueConfig Function(dynamic any);