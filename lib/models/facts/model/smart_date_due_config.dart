// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';
import '../facts_ext.dart';

import '../model/task_due_config.dart';


abstract class ISmartDateDueConfig
  implements ITaskDueConfig {

  static late _SmartDateDueConfigConstructor of;
  static late _SmartDateDueConfigFromJson fromJson;

  /// Property getter and setter for originalQuery: 
  String? get originalQuery;
  set originalQuery(String? originalQuery);


  /// Property getter and setter for interpolatedQuery: 
  String? get interpolatedQuery;
  set interpolatedQuery(String? interpolatedQuery);


  /// Property getter and setter for matchedTerm: 
  String? get matchedTerm;
  set matchedTerm(String? matchedTerm);


  /// Property getter and setter for hasTime: 
  bool? get hasTime;
  set hasTime(bool? hasTime);


  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  ISmartDateDueConfig clone();

  @override
  Set<String> get mfields => SmartDateDueConfigFields.values;

}

class SmartDateDueConfigFields {
  static const originalQuery = "originalQuery";
  static const interpolatedQuery = "interpolatedQuery";
  static const matchedTerm = "matchedTerm";
  static const hasTime = "hasTime";
  static const Set<String> values = {
    originalQuery, interpolatedQuery, matchedTerm, hasTime
  };
}

class SmartDateDueConfigPaths {
  static const JsonPath<String> originalQuery = JsonPath.internal(["originalQuery"], "/originalQuery");
  static const JsonPath<String> interpolatedQuery = JsonPath.internal(["interpolatedQuery"], "/interpolatedQuery");
  static const JsonPath<String> matchedTerm = JsonPath.internal(["matchedTerm"], "/matchedTerm");
  static const JsonPath<bool> hasTime = JsonPath.internal(["hasTime"], "/hasTime");
  static final Set<JsonPath> values = {
    originalQuery, interpolatedQuery, matchedTerm, hasTime
  };
}


const SmartDateDueConfigRef = MSchemaRef("sunny", "fact", "smartDateDueConfig", "0.0.1", "ephemeral");

typedef _SmartDateDueConfigConstructor = ISmartDateDueConfig Function({   required String? originalQuery, 
  required String? interpolatedQuery, 
  required String? matchedTerm, 
  required bool? hasTime
 });
typedef _SmartDateDueConfigFromJson = ISmartDateDueConfig Function(dynamic any);