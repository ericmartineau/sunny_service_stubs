// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, non_constant_identifier_names, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';
import '../facts_ext.dart';

import '../model/organization.dart';
import '../model/phase.dart';
import 'package:sunny_sdk_core/sunny_sdk_core.dart';
import 'package:sunny_service_stubs/models/waypoints/model/image_content.dart';


abstract class IFamily
  implements IOrganization {

  static late _FamilyConstructor of;
  static late _FamilyFromJson fromJson;

  /// Property getter and setter for familyName: 
  String? get familyName;
  set familyName(String? familyName);


  /// Property getter and setter for familyGreeting: 
  String? get familyGreeting;
  set familyGreeting(String? familyGreeting);


  /// Property getter and setter for marriageStart: 
  FlexiDate? get marriageStart;
  set marriageStart(FlexiDate? marriageStart);


  /// Property getter and setter for marriageEnd: 
  FlexiDate? get marriageEnd;
  set marriageEnd(FlexiDate? marriageEnd);


  /// Property getter and setter for parents: 
  List<MKey>? get parents;
  set parents(List<MKey>? parents);


  /// Property getter and setter for children: 
  List<MKey>? get children;
  set children(List<MKey>? children);


  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  IFamily clone();

  @override
  Set<String> get mfields => FamilyFields.values;

}

class FamilyFields {
  static const name = "name";
  static const logo = "logo";
  static const phases = "phases";
  static const parent = "parent";
  static const familyName = "familyName";
  static const familyGreeting = "familyGreeting";
  static const marriageStart = "marriageStart";
  static const marriageEnd = "marriageEnd";
  static const parents = "parents";
  static const children = "children";
  static const Set<String> values = {
    name, logo, phases, parent, familyName, familyGreeting, marriageStart, marriageEnd, parents, children
  };
}

class FamilyPaths {
  static const JsonPath<String> name = JsonPath.internal(["name"], "/name");
  static const JsonPath<IImageContent> logo = JsonPath.internal(["logo"], "/logo");
  static const JsonPath<List<IPhase>> phases = JsonPath.internal(["phases"], "/phases");
  static const JsonPath<List<MKey>> parent = JsonPath.internal(["parent"], "/parent");
  static const JsonPath<String> familyName = JsonPath.internal(["familyName"], "/familyName");
  static const JsonPath<String> familyGreeting = JsonPath.internal(["familyGreeting"], "/familyGreeting");
  static const JsonPath<FlexiDate> marriageStart = JsonPath.internal(["marriageStart"], "/marriageStart");
  static const JsonPath<FlexiDate> marriageEnd = JsonPath.internal(["marriageEnd"], "/marriageEnd");
  static const JsonPath<List<MKey>> parents = JsonPath.internal(["parents"], "/parents");
  static const JsonPath<List<MKey>> children = JsonPath.internal(["children"], "/children");
  static final Set<JsonPath> values = {
    name, logo, phases, parent, familyName, familyGreeting, marriageStart, marriageEnd, parents, children
  };
}


const FamilyRef = MSchemaRef("sunny", "fact", "family", "0.0.1", "mverse");

typedef _FamilyConstructor = IFamily Function({   required String? name, 
  IImageContent? logo, 
  List<IPhase>? phases, 
  required List<MKey>? parent, 
  String? familyName, 
  String? familyGreeting, 
  FlexiDate? marriageStart, 
  FlexiDate? marriageEnd, 
  required List<MKey>? parents, 
  required List<MKey>? children
 });
typedef _FamilyFromJson = IFamily Function(dynamic any);