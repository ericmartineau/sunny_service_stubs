// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';

import '../../reliveit/model/relive_it_contact.dart';
import '../../waypoints/model/image_content.dart';
import '../../waypoints/model/video_content.dart';
import '../model/fact.dart';
import '../model/task_fact_for_m_model.dart';
import 'package:sunny_sdk_core/sunny_sdk_core.dart';


abstract class IPossession implements IFact {
  /// Property getter and setter for contactKeys: 
  List<MKey>? get contactKeys;
  

  /// Property getter and setter for ownedStartDate: 
  FlexiDate? get ownedStartDate;
  

  /// Property getter and setter for ownedEndDate: 
  FlexiDate? get ownedEndDate;
  

  /// Property getter and setter for itemName: 
  String? get itemName;
  

  /// Property getter and setter for itemType: 
  String? get itemType;
  

  /// Property getter and setter for manufacturer: 
  String? get manufacturer;
  

  /// Property getter and setter for modelNumber: 
  String? get modelNumber;
  

  /// Property getter and setter for photos: 
  List<IImageContent>? get photos;
  

  /// Property getter and setter for videos: 
  List<IVideoContent>? get videos;
  

  /// Property getter and setter for details: 
  String? get details;
  

  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  IPossession clone();

  @override
  Set<String> get mfields => PossessionFields.values;

}

class PossessionFields {
  
  static const creator = "creator";
  static const dateCreated = "dateCreated";
  static const assistedTask = "assistedTask";
  static const contactKeys = "contactKeys";
  static const ownedStartDate = "ownedStartDate";
  static const ownedEndDate = "ownedEndDate";
  static const itemName = "itemName";
  static const itemType = "itemType";
  static const manufacturer = "manufacturer";
  static const modelNumber = "modelNumber";
  static const photos = "photos";
  static const videos = "videos";
  static const details = "details";
  static const Set<String> values = {
    creator, dateCreated, assistedTask, contactKeys, ownedStartDate, ownedEndDate, itemName, itemType, manufacturer, modelNumber, photos, videos, details
  };
}

class PossessionPaths {
  
  static const JsonPath<IReliveItContact> creator = JsonPath.internal(["creator"], "/creator");
  static const JsonPath<DateTime> dateCreated = JsonPath.internal(["dateCreated"], "/dateCreated");
  static const JsonPath<ITaskFactForMModel> assistedTask = JsonPath.internal(["assistedTask"], "/assistedTask");
  static const JsonPath<List<MKey>> contactKeys = JsonPath.internal(["contactKeys"], "/contactKeys");
  static const JsonPath<FlexiDate> ownedStartDate = JsonPath.internal(["ownedStartDate"], "/ownedStartDate");
  static const JsonPath<FlexiDate> ownedEndDate = JsonPath.internal(["ownedEndDate"], "/ownedEndDate");
  static const JsonPath<String> itemName = JsonPath.internal(["itemName"], "/itemName");
  static const JsonPath<String> itemType = JsonPath.internal(["itemType"], "/itemType");
  static const JsonPath<String> manufacturer = JsonPath.internal(["manufacturer"], "/manufacturer");
  static const JsonPath<String> modelNumber = JsonPath.internal(["modelNumber"], "/modelNumber");
  static const JsonPath<List<IImageContent>> photos = JsonPath.internal(["photos"], "/photos");
  static const JsonPath<List<IVideoContent>> videos = JsonPath.internal(["videos"], "/videos");
  static const JsonPath<String> details = JsonPath.internal(["details"], "/details");
  static final Set<JsonPath> values = {
    creator, dateCreated, assistedTask, contactKeys, ownedStartDate, ownedEndDate, itemName, itemType, manufacturer, modelNumber, photos, videos, details
  };
}


const PossessionRef = MSchemaRef("sunny", "fact", "possession", "0.0.1", "mverse");