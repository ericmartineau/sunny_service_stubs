// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, non_constant_identifier_names, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';
import '../sunny_ext.dart';

import '../model/contact.dart';


abstract class IContactList
  implements MModel {

  static late _ContactListConstructor of;
  static late _ContactListFromJson fromJson;

  /// Property getter and setter for total: 
  int? get total;
  set total(int? total);


  /// Property getter and setter for offset: 
  int? get offset;
  set offset(int? offset);


  /// Property getter and setter for max: 
  int? get max;
  set max(int? max);


  /// Property getter and setter for stats: 
  dynamic? get stats;
  set stats(dynamic? stats);


  /// Property getter and setter for data: 
  List<IContact>? get data;
  set data(List<IContact>? data);


  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  IContactList clone();

  @override
  Set<String> get mfields => ContactListFields.values;

}

class ContactListFields {
  static const total = "total";
  static const offset = "offset";
  static const max = "max";
  static const stats = "stats";
  static const data = "data";
  static const Set<String> values = {
    total, offset, max, stats, data
  };
}

class ContactListPaths {
  static const JsonPath<int> total = JsonPath.internal(["total"], "/total");
  static const JsonPath<int> offset = JsonPath.internal(["offset"], "/offset");
  static const JsonPath<int> max = JsonPath.internal(["max"], "/max");
  static const JsonPath<dynamic> stats = JsonPath.internal(["stats"], "/stats");
  static const JsonPath<List<IContact>> data = JsonPath.internal(["data"], "/data");
  static final Set<JsonPath> values = {
    total, offset, max, stats, data
  };
}


const ContactListRef = MSchemaRef("mverse", "sunny", "contactList", "0.0.1", "ephemeral");

typedef _ContactListConstructor = IContactList Function({   required int? total, 
  required int? offset, 
  required int? max, 
  dynamic? stats, 
  required List<IContact>? data
 });
typedef _ContactListFromJson = IContactList Function(dynamic any);