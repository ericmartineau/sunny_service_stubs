// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';

import '../model/content_delivery.dart';
import 'package:sunny_sdk_core/sunny_sdk_core.dart';


abstract class IContent implements MModel {
  /// Property getter and setter for dismissible: 
  bool? get dismissible;
  set dismissible(bool? dismissible);

  /// Property getter and setter for repeatsFor: 
  int? get repeatsFor;
  set repeatsFor(int? repeatsFor);

  /// Property getter and setter for showEvery: 
  int? get showEvery;
  set showEvery(int? showEvery);

  /// Property getter and setter for delivery: 
  IContentDelivery? get delivery;
  set delivery(IContentDelivery? delivery);

  /// Property getter and setter for durationUnit: 
  TimeUnit? get durationUnit;
  set durationUnit(TimeUnit? durationUnit);

  /// Property getter and setter for durationAmount: 
  int? get durationAmount;
  set durationAmount(int? durationAmount);

  /// Property getter and setter for delayUnit: 
  TimeUnit? get delayUnit;
  set delayUnit(TimeUnit? delayUnit);

  /// Property getter and setter for delayAmount: 
  int? get delayAmount;
  set delayAmount(int? delayAmount);

  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  IContent clone();

  @override
  Set<String> get mfields => ContentFields.values;

}

class ContentFields {
  
  static const dismissible = "dismissible";
  static const repeatsFor = "repeatsFor";
  static const showEvery = "showEvery";
  static const delivery = "delivery";
  static const durationUnit = "durationUnit";
  static const durationAmount = "durationAmount";
  static const delayUnit = "delayUnit";
  static const delayAmount = "delayAmount";
  static const Set<String> values = {
    dismissible, repeatsFor, showEvery, delivery, durationUnit, durationAmount, delayUnit, delayAmount
  };
}

class ContentPaths {
  
  static const JsonPath<bool> dismissible = JsonPath.internal(["dismissible"], "/dismissible");
  static const JsonPath<int> repeatsFor = JsonPath.internal(["repeatsFor"], "/repeatsFor");
  static const JsonPath<int> showEvery = JsonPath.internal(["showEvery"], "/showEvery");
  static const JsonPath<IContentDelivery> delivery = JsonPath.internal(["delivery"], "/delivery");
  static const JsonPath<TimeUnit> durationUnit = JsonPath.internal(["durationUnit"], "/durationUnit");
  static const JsonPath<int> durationAmount = JsonPath.internal(["durationAmount"], "/durationAmount");
  static const JsonPath<TimeUnit> delayUnit = JsonPath.internal(["delayUnit"], "/delayUnit");
  static const JsonPath<int> delayAmount = JsonPath.internal(["delayAmount"], "/delayAmount");
  static final Set<JsonPath> values = {
    dismissible, repeatsFor, showEvery, delivery, durationUnit, durationAmount, delayUnit, delayAmount
  };
}


const ContentRef = MSchemaRef("sunny", "content", "content", "0.0.1", "ephemeral");