// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, non_constant_identifier_names, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';
import '../waypoints_ext.dart';

import '../model/icon_info.dart';
import '../model/start_flow_set.dart';
import 'package:sunny_sdk_core/sunny_sdk_core.dart';


abstract class ICollectDataFlowInfo
  implements MModel {

  static late _CollectDataFlowInfoConstructor of;
  static late _CollectDataFlowInfoFromJson fromJson;

  /// Property getter and setter for userFactRef: 
  MSchemaRef? get userFactRef;
  set userFactRef(MSchemaRef? userFactRef);


  /// Property getter and setter for missingFactTitle: 
  String? get missingFactTitle;
  set missingFactTitle(String? missingFactTitle);


  /// Property getter and setter for flowStarts: 
  List<IStartFlowSet>? get flowStarts;
  set flowStarts(List<IStartFlowSet>? flowStarts);


  /// Property getter and setter for missingFactSubtitle: 
  String? get missingFactSubtitle;
  set missingFactSubtitle(String? missingFactSubtitle);


  /// Property getter and setter for missingFactIcon: 
  IIconInfo? get missingFactIcon;
  set missingFactIcon(IIconInfo? missingFactIcon);


  /// Property getter and setter for listFactRef: 
  MSchemaRef? get listFactRef;
  set listFactRef(MSchemaRef? listFactRef);


  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  ICollectDataFlowInfo clone();

  @override
  Set<String> get mfields => CollectDataFlowInfoFields.values;

}

class CollectDataFlowInfoFields {
  static const userFactRef = "userFactRef";
  static const missingFactTitle = "missingFactTitle";
  static const flowStarts = "flowStarts";
  static const missingFactSubtitle = "missingFactSubtitle";
  static const missingFactIcon = "missingFactIcon";
  static const listFactRef = "listFactRef";
  static const Set<String> values = {
    userFactRef, missingFactTitle, flowStarts, missingFactSubtitle, missingFactIcon, listFactRef
  };
}

class CollectDataFlowInfoPaths {
  static const JsonPath<MSchemaRef> userFactRef = JsonPath.internal(["userFactRef"], "/userFactRef");
  static const JsonPath<String> missingFactTitle = JsonPath.internal(["missingFactTitle"], "/missingFactTitle");
  static const JsonPath<List<IStartFlowSet>> flowStarts = JsonPath.internal(["flowStarts"], "/flowStarts");
  static const JsonPath<String> missingFactSubtitle = JsonPath.internal(["missingFactSubtitle"], "/missingFactSubtitle");
  static const JsonPath<IIconInfo> missingFactIcon = JsonPath.internal(["missingFactIcon"], "/missingFactIcon");
  static const JsonPath<MSchemaRef> listFactRef = JsonPath.internal(["listFactRef"], "/listFactRef");
  static final Set<JsonPath> values = {
    userFactRef, missingFactTitle, flowStarts, missingFactSubtitle, missingFactIcon, listFactRef
  };
}


const CollectDataFlowInfoRef = MSchemaRef("sunny", "collectDataFlow", "collectDataFlowInfo", "0.0.1", "ephemeral");

typedef _CollectDataFlowInfoConstructor = ICollectDataFlowInfo Function({   MSchemaRef? userFactRef, 
  String? missingFactTitle, 
  required List<IStartFlowSet>? flowStarts, 
  String? missingFactSubtitle, 
  IIconInfo? missingFactIcon, 
  MSchemaRef? listFactRef
 });
typedef _CollectDataFlowInfoFromJson = ICollectDataFlowInfo Function(dynamic any);