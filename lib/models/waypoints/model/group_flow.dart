// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';

import '../model/prioritized_member.dart';


abstract class IGroupFlow implements MModel {
  /// Property getter and setter for groupId: 
  String? get groupId;
  

  /// Property getter and setter for name: 
  String? get name;
  

  /// Property getter and setter for description: 
  String? get description;
  

  /// Property getter and setter for hasMembers: 
  bool? get hasMembers;
  

  /// Property getter and setter for prioritized: 
  List<IPrioritizedMember>? get prioritized;
  

  /// Property getter and setter for lastPrioritizeDate: 
  DateTime? get lastPrioritizeDate;
  

  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  IGroupFlow clone();

  @override
  Set<String> get mfields => GroupFlowFields.values;

}

class GroupFlowFields {
  
  static const groupId = "groupId";
  static const name = "name";
  static const description = "description";
  static const hasMembers = "hasMembers";
  static const prioritized = "prioritized";
  static const lastPrioritizeDate = "lastPrioritizeDate";
  static const Set<String> values = {
    groupId, name, description, hasMembers, prioritized, lastPrioritizeDate
  };
}

class GroupFlowPaths {
  
  static const JsonPath<String> groupId = JsonPath.internal(["groupId"], "/groupId");
  static const JsonPath<String> name = JsonPath.internal(["name"], "/name");
  static const JsonPath<String> description = JsonPath.internal(["description"], "/description");
  static const JsonPath<bool> hasMembers = JsonPath.internal(["hasMembers"], "/hasMembers");
  static const JsonPath<List<IPrioritizedMember>> prioritized = JsonPath.internal(["prioritized"], "/prioritized");
  static const JsonPath<DateTime> lastPrioritizeDate = JsonPath.internal(["lastPrioritizeDate"], "/lastPrioritizeDate");
  static final Set<JsonPath> values = {
    groupId, name, description, hasMembers, prioritized, lastPrioritizeDate
  };
}


const GroupFlowRef = MSchemaRef("sunny", "groupFlow", "groupFlow", "0.0.1", "ephemeral");