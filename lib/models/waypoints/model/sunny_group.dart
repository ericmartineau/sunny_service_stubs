// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, non_constant_identifier_names, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';
import '../waypoints_ext.dart';



abstract class ISunnyGroup
  implements MEntity {

  static late _SunnyGroupConstructor of;
  static late _SunnyGroupFromJson fromJson;

  /// Property getter and setter for identifier: 
  String? get identifier;
  set identifier(String? identifier);


  /// Property getter and setter for name: 
  String? get name;
  set name(String? name);


  /// Property getter and setter for description: 
  String? get description;
  set description(String? description);


  /// Property getter and setter for starred: 
  bool? get starred;
  set starred(bool? starred);


  /// Property getter and setter for contactCount: 
  int? get contactCount;
  set contactCount(int? contactCount);


  /// Property getter and setter for contacts: 
  List<String>? get contacts;
  set contacts(List<String>? contacts);


  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  ISunnyGroup clone();

  @override
  Set<String> get mfields => SunnyGroupFields.values;

}

class SunnyGroupFields {
  static const identifier = "identifier";
  static const name = "name";
  static const description = "description";
  static const starred = "starred";
  static const contactCount = "contactCount";
  static const contacts = "contacts";
  static const Set<String> values = {
    identifier, name, description, starred, contactCount, contacts
  };
}

class SunnyGroupPaths {
  static const JsonPath<String> identifier = JsonPath.internal(["identifier"], "/identifier");
  static const JsonPath<String> name = JsonPath.internal(["name"], "/name");
  static const JsonPath<String> description = JsonPath.internal(["description"], "/description");
  static const JsonPath<bool> starred = JsonPath.internal(["starred"], "/starred");
  static const JsonPath<int> contactCount = JsonPath.internal(["contactCount"], "/contactCount");
  static const JsonPath<List<String>> contacts = JsonPath.internal(["contacts"], "/contacts");
  static final Set<JsonPath> values = {
    identifier, name, description, starred, contactCount, contacts
  };
}


const SunnyGroupRef = MSchemaRef("slick", "sunny", "sunnyGroup", "0.0.1", "proxy");

typedef _SunnyGroupConstructor = ISunnyGroup Function({   required String? identifier, 
  required String? name, 
  String? description, 
  required bool? starred, 
  int? contactCount, 
  required List<String>? contacts
 });
typedef _SunnyGroupFromJson = ISunnyGroup Function(dynamic any);