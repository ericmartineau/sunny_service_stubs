// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, non_constant_identifier_names, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';
import '../waypoints_ext.dart';

import '../model/interaction_content.dart';
import 'package:sunny_service_stubs/models/facts/model/fact.dart';
import 'package:sunny_service_stubs/models/facts/model/task_fact_for_m_model.dart';
import 'package:sunny_service_stubs/models/reliveit/model/relive_it_contact.dart';


abstract class ISunnyInteraction
  implements IFact {

  static late _SunnyInteractionConstructor of;
  static late _SunnyInteractionFromJson fromJson;

  /// Property getter and setter for initiatorKey: 
  MKey? get initiatorKey;
  set initiatorKey(MKey? initiatorKey);


  /// Property getter and setter for recipientKeys: 
  List<MKey>? get recipientKeys;
  set recipientKeys(List<MKey>? recipientKeys);


  /// Property getter and setter for interactionType: 
  String? get interactionType;
  set interactionType(String? interactionType);


  /// Property getter and setter for content: 
  IInteractionContent? get content;
  set content(IInteractionContent? content);


  /// Property getter and setter for comment: 
  String? get comment;
  set comment(String? comment);


  /// Property getter and setter for commentUserId: 
  String? get commentUserId;
  set commentUserId(String? commentUserId);


  /// Property getter and setter for interactionDate: 
  DateTime? get interactionDate;
  set interactionDate(DateTime? interactionDate);


  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  ISunnyInteraction clone();

  @override
  Set<String> get mfields => SunnyInteractionFields.values;

}

class SunnyInteractionFields {
  static const creator = "creator";
  static const dateCreated = "dateCreated";
  static const assistedTask = "assistedTask";
  static const initiatorKey = "initiatorKey";
  static const recipientKeys = "recipientKeys";
  static const interactionType = "interactionType";
  static const content = "content";
  static const comment = "comment";
  static const commentUserId = "commentUserId";
  static const interactionDate = "interactionDate";
  static const Set<String> values = {
    creator, dateCreated, assistedTask, initiatorKey, recipientKeys, interactionType, content, comment, commentUserId, interactionDate
  };
}

class SunnyInteractionPaths {
  static const JsonPath<IReliveItContact> creator = JsonPath.internal(["creator"], "/creator");
  static const JsonPath<DateTime> dateCreated = JsonPath.internal(["dateCreated"], "/dateCreated");
  static const JsonPath<ITaskFactForMModel> assistedTask = JsonPath.internal(["assistedTask"], "/assistedTask");
  static const JsonPath<MKey> initiatorKey = JsonPath.internal(["initiatorKey"], "/initiatorKey");
  static const JsonPath<List<MKey>> recipientKeys = JsonPath.internal(["recipientKeys"], "/recipientKeys");
  static const JsonPath<String> interactionType = JsonPath.internal(["interactionType"], "/interactionType");
  static const JsonPath<IInteractionContent> content = JsonPath.internal(["content"], "/content");
  static const JsonPath<String> comment = JsonPath.internal(["comment"], "/comment");
  static const JsonPath<String> commentUserId = JsonPath.internal(["commentUserId"], "/commentUserId");
  static const JsonPath<DateTime> interactionDate = JsonPath.internal(["interactionDate"], "/interactionDate");
  static final Set<JsonPath> values = {
    creator, dateCreated, assistedTask, initiatorKey, recipientKeys, interactionType, content, comment, commentUserId, interactionDate
  };
}


const SunnyInteractionRef = MSchemaRef("slick", "sunny", "sunnyInteraction", "0.0.1", "mverse");

typedef _SunnyInteractionConstructor = ISunnyInteraction Function({   IReliveItContact? creator, 
  required DateTime? dateCreated, 
  ITaskFactForMModel? assistedTask, 
  required MKey? initiatorKey, 
  required List<MKey>? recipientKeys, 
  required String? interactionType, 
  IInteractionContent? content, 
  String? comment, 
  String? commentUserId, 
  DateTime? interactionDate
 });
typedef _SunnyInteractionFromJson = ISunnyInteraction Function(dynamic any);