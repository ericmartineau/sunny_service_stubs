// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';

import '../model/content_scope.dart';
import '../model/content_tag.dart';
import '../model/content_type.dart';
import '../model/template_medium.dart';


abstract class ITemplateData implements MEntity {
  /// Property getter and setter for name: 
  String? get name;
  set name(String? name);

  /// Property getter and setter for description: 
  String? get description;
  set description(String? description);

  /// Property getter and setter for medium: 
  ITemplateMedium? get medium;
  set medium(ITemplateMedium? medium);

  /// Property getter and setter for contentType: 
  IContentType? get contentType;
  set contentType(IContentType? contentType);

  /// Property getter and setter for subject: 
  String? get subject;
  set subject(String? subject);

  /// Property getter and setter for body: 
  String? get body;
  set body(String? body);

  /// Property getter and setter for tags: 
  List<IContentTag>? get tags;
  set tags(List<IContentTag>? tags);

  /// Property getter and setter for scope: 
  IContentScope? get scope;
  set scope(IContentScope? scope);

  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  ITemplateData clone();

  @override
  Set<String> get mfields => TemplateDataFields.values;

}

class TemplateDataFields {
  
  static const name = "name";
  static const description = "description";
  static const medium = "medium";
  static const contentType = "contentType";
  static const subject = "subject";
  static const body = "body";
  static const tags = "tags";
  static const scope = "scope";
  static const Set<String> values = {
    name, description, medium, contentType, subject, body, tags, scope
  };
}

class TemplateDataPaths {
  
  static const JsonPath<String> name = JsonPath.internal(["name"], "/name");
  static const JsonPath<String> description = JsonPath.internal(["description"], "/description");
  static const JsonPath<ITemplateMedium> medium = JsonPath.internal(["medium"], "/medium");
  static const JsonPath<IContentType> contentType = JsonPath.internal(["contentType"], "/contentType");
  static const JsonPath<String> subject = JsonPath.internal(["subject"], "/subject");
  static const JsonPath<String> body = JsonPath.internal(["body"], "/body");
  static const JsonPath<List<IContentTag>> tags = JsonPath.internal(["tags"], "/tags");
  static const JsonPath<IContentScope> scope = JsonPath.internal(["scope"], "/scope");
  static final Set<JsonPath> values = {
    name, description, medium, contentType, subject, body, tags, scope
  };
}


const TemplateDataRef = MSchemaRef("sunny", "content", "templateData", "0.0.1", "abstract");