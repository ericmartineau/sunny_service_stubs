// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, non_constant_identifier_names, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';
import '../m_entity_ext.dart';

import '../model/m_schema_definition.dart';
import '../model/m_schema_property.dart';


abstract class IMEntityDefinition
  implements IMSchemaDefinition, MEntityDefinitionExt {

  static late _MEntityDefinitionConstructor of;
  static late _MEntityDefinitionFromJson fromJson;

  /// Property getter and setter for schemaRef: 
  MSchemaRef? get schemaRef;
  set schemaRef(MSchemaRef? schemaRef);


  /// Property getter and setter for parentRef: 
  MSchemaRef? get parentRef;
  set parentRef(MSchemaRef? parentRef);


  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  IMEntityDefinition clone();

  @override
  Set<String> get mfields => MEntityDefinitionFields.values;

}

class MEntityDefinitionFields {
  static const schemaURI = "schemaURI";
  static const properties = "properties";
  static const schemaRef = "schemaRef";
  static const parentRef = "parentRef";
  static const Set<String> values = {
    schemaURI, properties, schemaRef, parentRef
  };
}

class MEntityDefinitionPaths {
  static const JsonPath<Uri> schemaURI = JsonPath.internal(["schemaURI"], "/schemaURI");
  static const JsonPath<List<IMSchemaProperty>> properties = JsonPath.internal(["properties"], "/properties");
  static const JsonPath<MSchemaRef> schemaRef = JsonPath.internal(["schemaRef"], "/schemaRef");
  static const JsonPath<MSchemaRef> parentRef = JsonPath.internal(["parentRef"], "/parentRef");
  static final Set<JsonPath> values = {
    schemaURI, properties, schemaRef, parentRef
  };
}


const MEntityDefinitionRef = MSchemaRef("mverse", "mthing", "mEntityDefinition", "0.0.1", "ephemeral");

typedef _MEntityDefinitionConstructor = IMEntityDefinition Function({   required Uri? schemaURI, 
  required List<IMSchemaProperty>? properties, 
  required MSchemaRef? schemaRef, 
  MSchemaRef? parentRef
 });
typedef _MEntityDefinitionFromJson = IMEntityDefinition Function(dynamic any);