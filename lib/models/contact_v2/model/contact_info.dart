// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, non_constant_identifier_names, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';
import 'package:sunny_service_stubs/contact/contactable.dart';
import '../contact_v2_ext.dart';

import '../model/physical_location.dart';
import 'package:timezone/timezone.dart';

abstract class IContactInfo implements MModel, IRef {
  static late _ContactInfoConstructor of;
  static late _ContactInfoFromJson fromJson;

  /// Property getter and setter for contactType:
  MSchemaRef? get contactType;
  set contactType(MSchemaRef? contactType);

  /// Property getter and setter for contactKey:
  RecordKey? get contactKey;
  set contactKey(RecordKey? contactKey);

  /// Property getter and setter for givenName:
  String? get givenName;
  set givenName(String? givenName);

  /// Property getter and setter for familyName:
  String? get familyName;
  set familyName(String? familyName);

  /// Property getter and setter for email:
  String? get email;
  set email(String? email);

  /// Property getter and setter for phone:
  String? get phone;
  set phone(String? phone);

  /// Property getter and setter for timeZone:
  Location? get timeZone;
  set timeZone(Location? timeZone);

  /// Property getter and setter for photoUrl:
  Uri? get photoUrl;
  set photoUrl(Uri? photoUrl);

  /// Property getter and setter for address:
  IPhysicalLocation? get address;
  set address(IPhysicalLocation? address);

  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  IContactInfo clone();

  @override
  Set<String> get mfields => ContactInfoFields.values;
}

class ContactInfoFields {
  static const contactType = "contactType";
  static const contactKey = "contactKey";
  static const givenName = "givenName";
  static const familyName = "familyName";
  static const email = "email";
  static const phone = "phone";
  static const timeZone = "timeZone";
  static const photoUrl = "photoUrl";
  static const address = "address";
  static const displayName = "displayName";
  static const Set<String> values = {
    contactType,
    contactKey,
    givenName,
    familyName,
    email,
    phone,
    timeZone,
    photoUrl,
    address
  };
}

class ContactInfoPaths {
  static const JsonPath<MSchemaRef> contactType =
      JsonPath.internal(["contactType"], "/contactType");
  static const JsonPath<RecordKey> contactKey =
      JsonPath.internal(["contactKey"], "/contactKey");
  static const JsonPath<String> givenName =
      JsonPath.internal(["givenName"], "/givenName");
  static const JsonPath<String> displayName =
      JsonPath.internal(["displayName"], "/displayName");
  static const JsonPath<String> familyName =
      JsonPath.internal(["familyName"], "/familyName");
  static const JsonPath<String> email = JsonPath.internal(["email"], "/email");
  static const JsonPath<String> phone = JsonPath.internal(["phone"], "/phone");
  static const JsonPath<Location> timeZone =
      JsonPath.internal(["timeZone"], "/timeZone");
  static const JsonPath<Uri> photoUrl =
      JsonPath.internal(["photoUrl"], "/photoUrl");
  static const JsonPath<IPhysicalLocation> address =
      JsonPath.internal(["address"], "/address");
  static final Set<JsonPath> values = {
    contactType,
    contactKey,
    givenName,
    familyName,
    email,
    phone,
    timeZone,
    photoUrl,
    address
  };
}

const ContactInfoRef =
    MSchemaRef("mverse", "contact", "contactInfo", "0.0.1", "ephemeral");

typedef _ContactInfoConstructor = IContactInfo Function(
    {MSchemaRef? contactType,
    RecordKey? contactKey,
    String? givenName,
    String? displayName,
    String? familyName,
    String? email,
    String? phone,
    Location? timeZone,
    Uri? photoUrl,
    IPhysicalLocation? address});
typedef _ContactInfoFromJson = IContactInfo Function(dynamic any);
