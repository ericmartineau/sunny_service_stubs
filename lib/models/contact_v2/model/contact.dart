// ignore_for_file: duplicate_import, unused_import, directives_ordering, unnecessary_null_comparison, non_constant_identifier_names, unnecessary_non_null_assertion

// DO NOT EDIT THIS FILE.  IT IS GENERATED AUTOMATICALLY AND YOUR CHANGES WILL BE OVERWRITTEN

import 'package:sunny_sdk_core/model_exports.dart';
import 'package:sunny_service_stubs/contact.dart';
import '../contact_v2_ext.dart';

import '../model/physical_location.dart';
import 'package:timezone/timezone.dart';

abstract class IContact implements MEntity, IRef {
  static late _ContactFromJson fromJson;

  /// Property getter and setter for givenName:
  String? get givenName;
  set givenName(String? givenName);

  /// Property getter and setter for familyName:
  String? get familyName;
  set familyName(String? familyName);

  /// Property getter and setter for email:
  String? get email;
  set email(String? email);

  /// Property getter and setter for phone:
  String? get phone;
  set phone(String? phone);

  /// Property getter and setter for timeZone:
  Location? get timeZone;
  set timeZone(Location? timeZone);

  /// Property getter and setter for photoUrl:
  Uri? get photoUrl;
  set photoUrl(Uri? photoUrl);

  /// Property getter and setter for address:
  IPhysicalLocation? get address;
  set address(IPhysicalLocation? address);

  @override
  String toString();
  dynamic toJson();

  @override
  operator [](key);

  @override
  operator []=(String key, value);

  @override
  void takeFrom(source);

  @override
  void takeFromMap(Map<String, dynamic>? from, {bool copyEntries = true});

  @override
  IContact clone();

  @override
  Set<String> get mfields => ContactFields.values;
}

class ContactFields {
  static const givenName = "givenName";
  static const familyName = "familyName";
  static const email = "email";
  static const phone = "phone";
  static const timeZone = "timeZone";
  static const photoUrl = "photoUrl";
  static const address = "address";
  static const Set<String> values = {givenName, familyName, email, phone, timeZone, photoUrl, address};
}

class ContactPaths {
  static const JsonPath<String> givenName = JsonPath.internal(["givenName"], "/givenName");
  static const JsonPath<String> familyName = JsonPath.internal(["familyName"], "/familyName");
  static const JsonPath<String> email = JsonPath.internal(["email"], "/email");
  static const JsonPath<String> phone = JsonPath.internal(["phone"], "/phone");
  static const JsonPath<Location> timeZone = JsonPath.internal(["timeZone"], "/timeZone");
  static const JsonPath<Uri> photoUrl = JsonPath.internal(["photoUrl"], "/photoUrl");
  static const JsonPath<IPhysicalLocation> address = JsonPath.internal(["address"], "/address");
  static final Set<JsonPath> values = {givenName, familyName, email, phone, timeZone, photoUrl, address};
}

const ContactRef = MSchemaRef("mverse", "contact", "contact", "0.0.1", "abstract");

// ignore: unused_element
typedef _ContactConstructor = IContact Function(
    {String? givenName,
    String? familyName,
    String? email,
    String? phone,
    Location? timeZone,
    Uri? photoUrl,
    IPhysicalLocation? address});
typedef _ContactFromJson = IContact Function(dynamic any);
