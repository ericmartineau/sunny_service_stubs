### AUTOGENERATED - THIS FILE IS INTENDED TO DUMP OUT MIXIN BOILERPLATE CODE.  THE BOILERPLATE CODE
### SHOULD BE COPIED OUT TO A SOURCE FILE WHEN THE MODEL IS FIRST GENERATED


mixin FactAgentMixin on FactAgentBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin FactAgentListMixin implements MModelList<FactAgent>

mixin FactDurationMixin on FactDurationBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin FactDurationListMixin implements MModelList<FactDuration>

mixin FactLinkMixin on FactLinkBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin FactLinkListMixin implements MModelList<FactLink>

mixin FactMetaDateMixin on FactMetaDateBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin FactMetaDateListMixin implements MModelList<FactMetaDate>

mixin FactRecurrenceMixin on FactRecurrenceBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin FactRecurrenceListMixin implements MModelList<FactRecurrence>

mixin FactSchemaMixin on FactSchemaBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin FactSchemaListMixin implements MModelList<FactSchema>

mixin FactSchemaListMixin on FactSchemaListBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin FactSchemaListListMixin implements MModelList<FactSchemaList>

mixin FactSchemaTemplateMixin on FactSchemaTemplateBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin FactSchemaTemplateListMixin implements MModelList<FactSchemaTemplate>

mixin FactSchemasMixin on FactSchemasBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin FactSchemasListMixin implements MModelList<FactSchemas>

mixin FactTenseMixin on FactTenseBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin FactTenseListMixin implements MModelList<FactTense>

mixin RemindableInfoMixin on RemindableInfoBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin RemindableInfoListMixin implements MModelList<RemindableInfo>

mixin TimeSensitivityMixin on TimeSensitivityBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin TimeSensitivityListMixin implements MModelList<TimeSensitivity>


###
### NON-FACT MIXINS
###

  mixin FactAgentMixin on FactAgentBase {}
  mixin FactAgentListMixin implements MModelList<FactAgent>

  mixin FactDurationMixin on FactDurationBase {}
  mixin FactDurationListMixin implements MModelList<FactDuration>

  mixin FactLinkMixin on FactLinkBase {}
  mixin FactLinkListMixin implements MModelList<FactLink>

  mixin FactMetaDateMixin on FactMetaDateBase {}
  mixin FactMetaDateListMixin implements MModelList<FactMetaDate>

  mixin FactRecurrenceMixin on FactRecurrenceBase {}
  mixin FactRecurrenceListMixin implements MModelList<FactRecurrence>

  mixin FactSchemaMixin on FactSchemaBase {}
  mixin FactSchemaListMixin implements MModelList<FactSchema>

  mixin FactSchemaListMixin on FactSchemaListBase {}
  mixin FactSchemaListListMixin implements MModelList<FactSchemaList>

  mixin FactSchemaTemplateMixin on FactSchemaTemplateBase {}
  mixin FactSchemaTemplateListMixin implements MModelList<FactSchemaTemplate>

  mixin FactSchemasMixin on FactSchemasBase {}
  mixin FactSchemasListMixin implements MModelList<FactSchemas>

  mixin FactTenseMixin on FactTenseBase {}
  mixin FactTenseListMixin implements MModelList<FactTense>

  mixin RemindableInfoMixin on RemindableInfoBase {}
  mixin RemindableInfoListMixin implements MModelList<RemindableInfo>

  mixin TimeSensitivityMixin on TimeSensitivityBase {}
  mixin TimeSensitivityListMixin implements MModelList<TimeSensitivity>



###
### API MIXINS
###
mixin FactSchemaApiMixin {}