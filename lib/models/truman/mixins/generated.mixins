### AUTOGENERATED - THIS FILE IS INTENDED TO DUMP OUT MIXIN BOILERPLATE CODE.  THE BOILERPLATE CODE
### SHOULD BE COPIED OUT TO A SOURCE FILE WHEN THE MODEL IS FIRST GENERATED


mixin DoterraDidJoinMixin on DoterraDidJoinBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin DoterraDidJoinListMixin implements MModelList<DoterraDidJoin>

mixin DoterraMemberInfoMixin on DoterraMemberInfoBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin DoterraMemberInfoListMixin implements MModelList<DoterraMemberInfo>

mixin DoterraMemberInfoListMixin on DoterraMemberInfoListBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin DoterraMemberInfoListListMixin implements MModelList<DoterraMemberInfoList>

mixin ElevatorPitchMixin on ElevatorPitchBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin ElevatorPitchListMixin implements MModelList<ElevatorPitch>

mixin ElevatorPitchListMixin on ElevatorPitchListBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin ElevatorPitchListListMixin implements MModelList<ElevatorPitchList>

mixin MemberLevelMixin on MemberLevelBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin MemberLevelListMixin implements MModelList<MemberLevel>

mixin MyDoterraStoryMixin on MyDoterraStoryBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin MyDoterraStoryListMixin implements MModelList<MyDoterraStory>

mixin MyDoterraStoryListMixin on MyDoterraStoryListBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin MyDoterraStoryListListMixin implements MModelList<MyDoterraStoryList>

mixin TheWhyMixin on TheWhyBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin TheWhyListMixin implements MModelList<TheWhy>

mixin TheWhyListMixin on TheWhyListBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin TheWhyListListMixin implements MModelList<TheWhyList>

mixin TrumanHealthInfoMixin on TrumanHealthInfoBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin TrumanHealthInfoListMixin implements MModelList<TrumanHealthInfo>

mixin TrumanHealthInfoListMixin on TrumanHealthInfoListBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin TrumanHealthInfoListListMixin implements MModelList<TrumanHealthInfoList>

mixin TrumanNewMemberMixin on TrumanNewMemberBase {
  // If this model is a fact, use some of these overrides
  set contactKey(MKey contactKey) {
    this.mycontactField = contactKey;
  }

  MKey get contactKey => mycontactField;

  @mustCallSuper
  initialize(MKey targetKey, MKey agentKey) {
    super.initialize(targetKey, agentKey);
    // Add any extra initialization options
  }

  String title(Contact contact) {
    return "TODO: Render a title for this fact";
  }

  String subtitle(Contact contact) {
    return "TODO: Render a subtitle for this fact";
  }
}

mixin TrumanNewMemberListMixin implements MModelList<TrumanNewMember>


###
### NON-FACT MIXINS
###

  mixin DoterraDidJoinMixin on DoterraDidJoinBase {}
  mixin DoterraDidJoinListMixin implements MModelList<DoterraDidJoin>

  mixin DoterraMemberInfoMixin on DoterraMemberInfoBase {}
  mixin DoterraMemberInfoListMixin implements MModelList<DoterraMemberInfo>

  mixin DoterraMemberInfoListMixin on DoterraMemberInfoListBase {}
  mixin DoterraMemberInfoListListMixin implements MModelList<DoterraMemberInfoList>

  mixin ElevatorPitchMixin on ElevatorPitchBase {}
  mixin ElevatorPitchListMixin implements MModelList<ElevatorPitch>

  mixin ElevatorPitchListMixin on ElevatorPitchListBase {}
  mixin ElevatorPitchListListMixin implements MModelList<ElevatorPitchList>

  mixin MemberLevelMixin on MemberLevelBase {}
  mixin MemberLevelListMixin implements MModelList<MemberLevel>

  mixin MyDoterraStoryMixin on MyDoterraStoryBase {}
  mixin MyDoterraStoryListMixin implements MModelList<MyDoterraStory>

  mixin MyDoterraStoryListMixin on MyDoterraStoryListBase {}
  mixin MyDoterraStoryListListMixin implements MModelList<MyDoterraStoryList>

  mixin TheWhyMixin on TheWhyBase {}
  mixin TheWhyListMixin implements MModelList<TheWhy>

  mixin TheWhyListMixin on TheWhyListBase {}
  mixin TheWhyListListMixin implements MModelList<TheWhyList>

  mixin TrumanHealthInfoMixin on TrumanHealthInfoBase {}
  mixin TrumanHealthInfoListMixin implements MModelList<TrumanHealthInfo>

  mixin TrumanHealthInfoListMixin on TrumanHealthInfoListBase {}
  mixin TrumanHealthInfoListListMixin implements MModelList<TrumanHealthInfoList>

  mixin TrumanNewMemberMixin on TrumanNewMemberBase {}
  mixin TrumanNewMemberListMixin implements MModelList<TrumanNewMember>



###
### API MIXINS
###
mixin DoterraMemberInfoApiMixin {}
mixin ElevatorPitchApiMixin {}
mixin MyDoterraStoryApiMixin {}
mixin TheWhyApiMixin {}
mixin TrumanHealthInfoApiMixin {}